{"version":3,"file":"main.fb1110e9c7e623b87e0c.bundle.js","sources":["webpack:///./src/utils.tsx"],"sourcesContent":["import filesize from 'filesize';\nimport purify from 'dompurify';\n\nexport type LocalizedStringMap = {\n  [lang: string]: string;\n};\n\nexport const gettext = (text: string) => text;\n\nexport const getLocalizedString = (\n  localizedStringMap: LocalizedStringMap,\n  lang = process.env.REACT_APP_DEFAULT_API_LANG as string,\n) => {\n  return localizedStringMap[lang];\n};\n\nexport const getLanguageFromMimeType = (mimeType: string) => {\n  switch (mimeType) {\n    case 'application/javascript':\n    case 'text/javascript':\n      return 'js';\n    case 'application/json':\n      return 'json';\n    case 'application/xml':\n      return 'xml';\n    case 'text/css':\n      return 'css';\n    case 'text/html':\n      return 'html';\n    default:\n      return 'text';\n  }\n};\n\nexport const sanitizeHTML = (\n  text: string,\n  allowTags: string[] = [],\n  _purify = purify,\n) => {\n  return {\n    __html: _purify.sanitize(text, { ALLOWED_TAGS: allowTags }),\n  };\n};\n\nexport const nl2br = (text: string | null) => {\n  return (text || '').replace(/(\\r\\n|\\r|\\n)(?!<\\/?(li|ul|ol)>)/g, '<br />');\n};\n\nexport const formatFilesize = (size: number): string => {\n  return filesize(size, { standard: 'iec' });\n};\n"],"mappings":"AAAA","sourceRoot":""}